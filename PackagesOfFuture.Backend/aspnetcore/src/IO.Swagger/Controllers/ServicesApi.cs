/*
 * PackagesOfFuture.Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ServicesApiController : ControllerBase
    { 
        /// <summary>
        /// Gets all services
        /// </summary>
        /// <response code="200">When there are services</response>
        /// <response code="404">If there are no services</response>
        [HttpGet]
        [Route("/Services")]
        [ValidateModelState]
        [SwaggerOperation("ServicesGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ServiceDto>), description: "When there are services")]
        public virtual IActionResult ServicesGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ServiceDto>));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"price\" : 0.8008281904610115,\n  \"name\" : \"name\",\n  \"description\" : \"description\"\n}, {\n  \"price\" : 0.8008281904610115,\n  \"name\" : \"name\",\n  \"description\" : \"description\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<ServiceDto>>(exampleJson)
                        : default(List<ServiceDto>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Registers a new service
        /// </summary>
        /// <param name="body">Representation of service to register</param>
        /// <response code="200">Success</response>
        /// <response code="204">When service was registered</response>
        /// <response code="400">When error regarding input occurred</response>
        [HttpPost]
        [Route("/Services")]
        [ValidateModelState]
        [SwaggerOperation("ServicesPost")]
        public virtual IActionResult ServicesPost([FromBody]RegisterServiceDto body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            throw new NotImplementedException();
        }
    }
}
